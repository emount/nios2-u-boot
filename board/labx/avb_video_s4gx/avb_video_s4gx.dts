/*
 * This devicetree is generated by sopc2dts
 * Sopc2dts is written by Walter Goossens <waltergoossens@home.nl>
 * in cooperation with the nios2 community <Nios2-dev@sopc.et.ntust.edu.tw>
 */
/dts-v1/;
/ {
	model = "ALTR,q_sys";
	compatible = "ALTR,q_sys";
	#address-cells = <1>;
	#size-cells = <1>;
	cpus {
		#address-cells = <1>;
		#size-cells = <0>;
		nios2_qsys_0: cpu@0x0 {
			device_type = "cpu";
			compatible = "ALTR,nios2-11.0";
			reg = <0>;
			interrupt-controller;
			#interrupt-cells = <1>;
			clock-frequency = <100000000>;	//embeddedsw.CMacro.CPU_FREQ type NUMBER
			dcache-line-size = <32>;	//embeddedsw.CMacro.DCACHE_LINE_SIZE type NUMBER
			icache-line-size = <32>;	//embeddedsw.CMacro.ICACHE_LINE_SIZE type NUMBER
			dcache-size = <2048>;	//embeddedsw.CMacro.DCACHE_SIZE type NUMBER
			icache-size = <4096>;	//embeddedsw.CMacro.ICACHE_SIZE type NUMBER
			ALTR,implementation = "fast";	//embeddedsw.CMacro.CPU_IMPLEMENTATION type STRING
			ALTR,pid-num-bits = <8>;	//embeddedsw.CMacro.PROCESS_ID_NUM_BITS type NUMBER
			ALTR,tlb-num-ways = <16>;	//embeddedsw.CMacro.TLB_NUM_WAYS type NUMBER
			ALTR,tlb-num-entries = <256>;	//embeddedsw.CMacro.TLB_NUM_ENTRIES type NUMBER
			ALTR,tlb-ptr-sz = <8>;	//embeddedsw.CMacro.TLB_PTR_SZ type NUMBER
			ALTR,has-mul;	//embeddedsw.CMacro.HARDWARE_MULTIPLY_PRESENT type NUMBER
			ALTR,has-mulx;	//embeddedsw.CMacro.HARDWARE_MULX_PRESENT type NUMBER
			ALTR,reset-addr = <0xCCC20000>;	//embeddedsw.CMacro.RESET_ADDR type STRING
			ALTR,fast-tlb-miss-addr = <0xC9000000>;	//embeddedsw.CMacro.FAST_TLB_MISS_EXCEPTION_ADDR type STRING
			ALTR,exception-addr = <0xC0000020>;	//embeddedsw.CMacro.EXCEPTION_ADDR type STRING
		};
	};
	memory@0 {
		device_type = "memory";
		reg = <0x09000000 0x00008000
			0x00000000 0x08000000>;
	};
	sopc@0 {
		ranges ;
		#address-cells = <1>;
		#size-cells = <1>;
		device_type = "soc";
		compatible = "ALTR,avalon","simple-bus";
		bus-frequency = < 100000000 >;
		altpll_0: clock@0x82224c0 {
			compatible = "ALTR,pll-11.0","ALTR,pll-1.0";
			reg = < 0x82224c0 0x10>;
		}; //end clock (altpll_0)

		cfi_flash: flash@0xc000000 {
			#address-cells = <1>;
			#size-cells = <1>;
			compatible = "ALTR,cfi_flash-altera_generic_tristate_controller","cfi-flash";
			reg = < 0xc000000 0x4000000>;
			bank-width = <2>;
			device-width = <1>;
			bootenv@0 {
				reg = < 0x00000000 0x00008000 >;
			};
			bottompad@8000 {
				reg = < 0x00008000 0x00018000 >;
			};
			goldenfpga@20000 {
				reg = < 0x00020000 0x00C00000 >;
			};
			uboot@c20000 {
				reg = < 0x00C20000 0x00040000 >;
			};
			toppad@c60000 {
				reg = < 0x00C60000 0x033A0000 >;
			};
		}; //end flash (cfi_flash)

		mm_clock_crossing_bridge_0: bridge@0xb000000 {
			compatible = "ALTR,avalon-11.0","simple-bus";
			reg = < 0xb000000 0x40000>;
			#address-cells = <1>;
			#size-cells = <1>;
			ranges = <0x00000180 0x0B000180 0x00000020
				0x00000020 0x0B000020 0x00000020
				0x00000040 0x0B000040 0x00000020>;

			uart_0: serial@0x180 {
				compatible = "ALTR,uart-11.0","ALTR,uart-1.0";
				reg = < 0x180 0x20>;
				current-speed = <115200>;	//embeddedsw.CMacro.BAUD type NUMBER
				clock-frequency = <10000000>;	//embeddedsw.CMacro.FREQ type NUMBER
			}; //end serial (uart_0)

			timer: timer@0x20 {
				compatible = "ALTR,timer-11.0","ALTR,timer-1.0";
				reg = < 0x20 0x20>;
				clock-frequency = <10000000>;
			}; //end timer (timer)

			led_reg: gpio@0x40 {
				compatible = "ALTR,pio-11.0","ALTR,pio-1.0";
				reg = < 0x40 0x20>;
				width = <16>;	//width type NUMBER
				resetvalue = <0>;	//resetValue type NUMBER
			}; //end gpio (led_reg)

		}; //end bridge (mm_clock_crossing_bridge_0)

	}; //sopc
	chosen {
		bootargs = "console=ttyAL0 root=mtd4 rootfstype=squashfs init=/bin/init";
	};
};
